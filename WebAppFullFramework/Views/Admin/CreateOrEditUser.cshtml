@model WebAppFullFramework.Models.RegisterViewModel
@{ ViewBag.Title = "CreateOrEditUser";  Layout = "~/Views/Shared/_LayoutAdmin.cshtml"; }
@using (Html.BeginForm("SaveUser", "Admin", FormMethod.Post)) 
{
    @Html.AntiForgeryToken()    
    <div class="form-horizontal">
        <h4 class="page-header">@if (Model != null && !string.IsNullOrEmpty(Model.Id))
        {@Html.Raw("Editar registro de usuário");
    }
    else
    { @Html.Raw("Criar registro de usuário");
    }</h4>        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (Model != null)
        {
            @Html.HiddenFor(model => model.Id)
        }
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@(Model == null?"Criar":"Alterar")" class="btn btn-primary" />
                @Html.RouteLink("Lista de usuários", "users", null, new { @class = "btn btn-danger" })
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
